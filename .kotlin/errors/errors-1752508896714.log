kotlin version: 2.0.21
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /Users/nguyenminhhung/Documents/flutter/PosNativeApp/components/src/main/java/com/example/components/common/BuildButton.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:246)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:142)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:148)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:BuildButton-Xl8krx8 visibility:public modality:FINAL <> (color:androidx.compose.ui.graphics.Color, radius:kotlin.Float, width:androidx.compose.ui.unit.Dp?, height:androidx.compose.ui.unit.Dp?, enableWidth:kotlin.Boolean, loading:kotlin.Boolean, borderColor:androidx.compose.ui.graphics.Color?, onPress:kotlin.Function0<kotlin.Unit>, content:@[Composable] kotlin.Function0<kotlin.Unit>) returnType:kotlin.Unit
  annotations:
    Composable
  VALUE_PARAMETER name:color index:0 type:androidx.compose.ui.graphics.Color
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.graphics.Color
  VALUE_PARAMETER name:radius index:1 type:kotlin.Float
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Float
  VALUE_PARAMETER name:width index:2 type:androidx.compose.ui.unit.Dp?
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.unit.Dp?
  VALUE_PARAMETER name:height index:3 type:androidx.compose.ui.unit.Dp?
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.unit.Dp?
  VALUE_PARAMETER name:enableWidth index:4 type:kotlin.Boolean
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Boolean
  VALUE_PARAMETER name:loading index:5 type:kotlin.Boolean
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Boolean
  VALUE_PARAMETER name:borderColor index:6 type:androidx.compose.ui.graphics.Color?
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.graphics.Color?
  VALUE_PARAMETER name:onPress index:7 type:kotlin.Function0<kotlin.Unit>
  VALUE_PARAMETER name:content index:8 type:@[Composable] kotlin.Function0<kotlin.Unit>
  BLOCK_BODY
    VAR PROPERTY_DELEGATE name:isHovered$delegate type:androidx.compose.runtime.MutableState<kotlin.Boolean> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
        <T>: androidx.compose.runtime.MutableState<kotlin.Boolean>
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.Boolean>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun BuildButton_Xl8krx8$lambda$0 (): androidx.compose.runtime.MutableState<kotlin.Boolean> declared in com.example.components.common.BuildButtonKt' type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.Boolean>> origin=INLINE_LAMBDA reflectionTarget=null
    VAR PROPERTY_DELEGATE name:backgroundColor$delegate type:androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> [val]
      CALL 'public final fun animateColorAsState-a9xZ5FE$default (targetValue: androidx.compose.ui.graphics.Color, animationSpec: androidx.compose.animation.core.AnimationSpec<androidx.compose.ui.graphics.Color>?, label: kotlin.String?, finishedListener: kotlin.Function1<androidx.compose.ui.graphics.Color, kotlin.Unit>?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> declared in androidx.compose.animation.SingleValueAnimationKt' type=androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> origin=DEFAULT_DISPATCH_CALL
        targetValue: WHEN type=androidx.compose.ui.graphics.Color origin=IF
          BRANCH
            if: CALL 'private final fun BuildButton_Xl8krx8$lambda$1 ($isHovered$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean>): kotlin.Boolean declared in com.example.components.common.BuildButtonKt' type=kotlin.Boolean origin=GET_LOCAL_PROPERTY
              $isHovered$delegate: GET_VAR 'val isHovered$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean> [val] declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
            then: CALL 'public final fun copy-wmQWz5c$default (arg0: androidx.compose.ui.graphics.Color, alpha: kotlin.Float, red: kotlin.Float, green: kotlin.Float, blue: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.graphics.Color' type=androidx.compose.ui.graphics.Color origin=DEFAULT_DISPATCH_CALL
              arg0: GET_VAR 'color: androidx.compose.ui.graphics.Color declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=androidx.compose.ui.graphics.Color origin=null
              alpha: CONST Float type=kotlin.Float value=0.75
              red: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
                CONST Float type=kotlin.Float value=0.0
              green: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
                CONST Float type=kotlin.Float value=0.0
              blue: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
                CONST Float type=kotlin.Float value=0.0
              $mask0: CONST Int type=kotlin.Int value=14
              $handler: CONST Null type=kotlin.Any? value=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: GET_VAR 'color: androidx.compose.ui.graphics.Color declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=androidx.compose.ui.graphics.Color origin=null
        animationSpec: COMPOSITE type=androidx.compose.animation.core.AnimationSpec<androidx.compose.ui.graphics.Color>? origin=DEFAULT_VALUE
          CONST Null type=androidx.compose.animation.core.AnimationSpec<androidx.compose.ui.graphics.Color>? value=null
        label: CONST String type=kotlin.String value=""
        finishedListener: COMPOSITE type=kotlin.Function1<androidx.compose.ui.graphics.Color, kotlin.Unit>? origin=DEFAULT_VALUE
          CONST Null type=kotlin.Function1<androidx.compose.ui.graphics.Color, kotlin.Unit>? value=null
        $mask0: CONST Int type=kotlin.Int value=10
        $handler: CONST Null type=kotlin.Any? value=null
    VAR name:borderColorState type:androidx.compose.ui.graphics.Color [val]
      BLOCK type=androidx.compose.ui.graphics.Color origin=FOLDED_ELVIS
        WHEN type=androidx.compose.ui.graphics.Color origin=FOLDED_ELVIS
          BRANCH
            if: COMPOSITE type=kotlin.Boolean origin=null
              CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                  arg0: GET_VAR 'borderColor: androidx.compose.ui.graphics.Color? declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=androidx.compose.ui.graphics.Color? origin=null
                  arg1: CONST Null type=kotlin.Nothing? value=null
            then: GET_VAR 'borderColor: androidx.compose.ui.graphics.Color? declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=androidx.compose.ui.graphics.Color? origin=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: GET_VAR 'color: androidx.compose.ui.graphics.Color declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=androidx.compose.ui.graphics.Color origin=null
    VAR name:btnModifier type:androidx.compose.ui.Modifier [val]
      CALL 'public open fun then (other: androidx.compose.ui.Modifier): androidx.compose.ui.Modifier [infix] declared in androidx.compose.ui.Modifier.Companion' type=androidx.compose.ui.Modifier origin=null
        $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
        other: WHEN type=androidx.compose.ui.Modifier origin=IF
          BRANCH
            if: CALL 'public final fun ANDAND (arg0: kotlin.Boolean, arg1: kotlin.Boolean): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
              arg0: GET_VAR 'enableWidth: kotlin.Boolean declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=kotlin.Boolean origin=null
              arg1: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
                $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                  arg0: GET_VAR 'width: androidx.compose.ui.unit.Dp? declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=androidx.compose.ui.unit.Dp? origin=null
                  arg1: CONST Null type=kotlin.Nothing? value=null
            then: CALL 'public final fun width-3ABfNKs (width: androidx.compose.ui.unit.Dp): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=null
              $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
              width: GET_VAR 'width: androidx.compose.ui.unit.Dp? declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=androidx.compose.ui.unit.Dp? origin=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CALL 'public final fun fillMaxWidth$default (fraction: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
              $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
              fraction: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
                CONST Float type=kotlin.Float value=0.0
              $mask0: CONST Int type=kotlin.Int value=1
              $handler: CONST Null type=kotlin.Any? value=null
    CALL 'public final fun Box$default (modifier: androidx.compose.ui.Modifier?, contentAlignment: androidx.compose.ui.Alignment?, propagateMinConstraints: kotlin.Boolean, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.BoxKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      modifier: CALL 'public final fun shadow-s4CzXII$default (elevation: androidx.compose.ui.unit.Dp, shape: androidx.compose.ui.graphics.Shape?, clip: kotlin.Boolean, ambientColor: androidx.compose.ui.graphics.Color, spotColor: androidx.compose.ui.graphics.Color, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.ui.draw.ShadowKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
        $receiver: CALL 'public final fun border-xT4_qwU (width: androidx.compose.ui.unit.Dp, color: androidx.compose.ui.graphics.Color, shape: androidx.compose.ui.graphics.Shape): androidx.compose.ui.Modifier declared in androidx.compose.foundation.BorderKt' type=androidx.compose.ui.Modifier origin=null
          $receiver: CALL 'public final fun background-bw27NRU$default (color: androidx.compose.ui.graphics.Color, shape: androidx.compose.ui.graphics.Shape?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.BackgroundKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
            $receiver: CALL 'public final fun clip (shape: androidx.compose.ui.graphics.Shape): androidx.compose.ui.Modifier declared in androidx.compose.ui.draw.ClipKt' type=androidx.compose.ui.Modifier origin=null
              $receiver: CALL 'public open fun then (other: androidx.compose.ui.Modifier): androidx.compose.ui.Modifier [infix] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier origin=null
                $this: GET_VAR 'val btnModifier: androidx.compose.ui.Modifier [val] declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=androidx.compose.ui.Modifier origin=null
                other: WHEN type=androidx.compose.ui.Modifier origin=IF
                  BRANCH
                    if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
                      $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                        arg0: GET_VAR 'height: androidx.compose.ui.unit.Dp? declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=androidx.compose.ui.unit.Dp? origin=null
                        arg1: CONST Null type=kotlin.Nothing? value=null
                    then: CALL 'public final fun height-3ABfNKs (height: androidx.compose.ui.unit.Dp): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=null
                      $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
                      height: GET_VAR 'height: androidx.compose.ui.unit.Dp? declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=androidx.compose.ui.unit.Dp? origin=null
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
              shape: CALL 'public final fun RoundedCornerShape-0680j_4 (size: androidx.compose.ui.unit.Dp): androidx.compose.foundation.shape.RoundedCornerShape declared in androidx.compose.foundation.shape.RoundedCornerShapeKt' type=androidx.compose.foundation.shape.RoundedCornerShape origin=null
                size: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
                  $receiver: GET_VAR 'radius: kotlin.Float declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=kotlin.Float origin=null
            color: CALL 'private final fun BuildButton_Xl8krx8$lambda$2 ($backgroundColor$delegate: androidx.compose.runtime.State<androidx.compose.ui.graphics.Color>): androidx.compose.ui.graphics.Color declared in com.example.components.common.BuildButtonKt' type=androidx.compose.ui.graphics.Color origin=GET_LOCAL_PROPERTY
              $backgroundColor$delegate: GET_VAR 'val backgroundColor$delegate: androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> [val] declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> origin=null
            shape: COMPOSITE type=androidx.compose.ui.graphics.Shape? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.ui.graphics.Shape? value=null
            $mask0: CONST Int type=kotlin.Int value=2
            $handler: CONST Null type=kotlin.Any? value=null
          width: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
            $receiver: CONST Int type=kotlin.Int value=1
          color: WHEN type=androidx.compose.ui.graphics.Color origin=IF
            BRANCH
              if: CALL 'private final fun BuildButton_Xl8krx8$lambda$1 ($isHovered$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean>): kotlin.Boolean declared in com.example.components.common.BuildButtonKt' type=kotlin.Boolean origin=GET_LOCAL_PROPERTY
                $isHovered$delegate: GET_VAR 'val isHovered$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean> [val] declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
              then: CALL 'public final fun getTransparent-0d7_KjU (): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.graphics.Color.Companion' type=androidx.compose.ui.graphics.Color origin=GET_PROPERTY
                $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.graphics.Color.Companion visibility:public [final,static] declared in androidx.compose.ui.graphics.Color' type=androidx.compose.ui.graphics.Color.Companion origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: GET_VAR 'val borderColorState: androidx.compose.ui.graphics.Color [val] declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=androidx.compose.ui.graphics.Color origin=null
          shape: CALL 'public final fun RoundedCornerShape-0680j_4 (size: androidx.compose.ui.unit.Dp): androidx.compose.foundation.shape.RoundedCornerShape declared in androidx.compose.foundation.shape.RoundedCornerShapeKt' type=androidx.compose.foundation.shape.RoundedCornerShape origin=null
            size: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
              $receiver: GET_VAR 'radius: kotlin.Float declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=kotlin.Float origin=null
        elevation: WHEN type=androidx.compose.ui.unit.Dp origin=IF
          BRANCH
            if: CALL 'private final fun BuildButton_Xl8krx8$lambda$1 ($isHovered$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean>): kotlin.Boolean declared in com.example.components.common.BuildButtonKt' type=kotlin.Boolean origin=GET_LOCAL_PROPERTY
              $isHovered$delegate: GET_VAR 'val isHovered$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean> [val] declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
            then: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
              $receiver: CONST Int type=kotlin.Int value=6
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
              $receiver: CONST Int type=kotlin.Int value=0
        shape: COMPOSITE type=androidx.compose.ui.graphics.Shape? origin=DEFAULT_VALUE
          CONST Null type=androidx.compose.ui.graphics.Shape? value=null
        clip: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
          CONST Boolean type=kotlin.Boolean value=false
        ambientColor: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
          CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
            <T>: kotlin.Long
            <R>: androidx.compose.ui.graphics.Color
            v: CONST Long type=kotlin.Long value=0
        spotColor: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
          CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
            <T>: kotlin.Long
            <R>: androidx.compose.ui.graphics.Color
            v: CONST Long type=kotlin.Long value=0
        $mask0: CONST Int type=kotlin.Int value=30
        $handler: CONST Null type=kotlin.Any? value=null
      contentAlignment: COMPOSITE type=androidx.compose.ui.Alignment? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.Alignment? value=null
      propagateMinConstraints: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
        CONST Boolean type=kotlin.Boolean value=false
      content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        FUNCTION_REFERENCE 'private final fun BuildButton_Xl8krx8$lambda$6 ($radius: kotlin.Float, $loading: kotlin.Boolean, $onPress: kotlin.Function0<kotlin.Unit>, $btnModifier: androidx.compose.ui.Modifier, $content: @[Composable] kotlin.Function0<kotlin.Unit>, $height: androidx.compose.ui.unit.Dp?, $backgroundColor$delegate: androidx.compose.runtime.State<androidx.compose.ui.graphics.Color>): kotlin.Unit declared in com.example.components.common.BuildButtonKt' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
          $radius: GET_VAR 'radius: kotlin.Float declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=kotlin.Float origin=null
          $loading: GET_VAR 'loading: kotlin.Boolean declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=kotlin.Boolean origin=null
          $onPress: GET_VAR 'onPress: kotlin.Function0<kotlin.Unit> declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=kotlin.Function0<kotlin.Unit> origin=null
          $btnModifier: GET_VAR 'val btnModifier: androidx.compose.ui.Modifier [val] declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=androidx.compose.ui.Modifier origin=null
          $content: GET_VAR 'content: @[Composable] kotlin.Function0<kotlin.Unit> declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=@[Composable] kotlin.Function0<kotlin.Unit> origin=null
          $height: GET_VAR 'height: androidx.compose.ui.unit.Dp? declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=androidx.compose.ui.unit.Dp? origin=null
          $backgroundColor$delegate: GET_VAR 'val backgroundColor$delegate: androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> [val] declared in com.example.components.common.BuildButtonKt.BuildButton-Xl8krx8' type=androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> origin=null
      $mask0: CONST Int type=kotlin.Int value=6
      $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:40)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:406)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:423)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:168)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 43 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:653)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:790)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:584)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:240)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:123)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:44)
	... 53 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/ComposablesKt;.remember(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 68 more


